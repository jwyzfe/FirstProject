from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from datetime import datetime
import time
import json

stock_code = [
    "MMM",
    "AOS",
    "ABT",
    "ABBV",
    "ACN",
    "ADBE",
    "AMD",
    "AES",
    "AFL",
    "A",
    "APD",
    "ABNB",
    "AKAM",
    "ALB",
    "ARE",
    "ALGN",
    "ALLE",
    "LNT",
    "ALL",
    "GOOGL",
    "GOOG",
    "MO",
    "AMZN",
    "AMCR",
    "AMTM",
    "AEE",
    "AEP",
    "AXP",
    "AIG",
    "AMT",
    "AWK",
    "AMP",
    "AME",
    "AMGN",
    "APH",
    "ADI",
    "ANSS",
    "AON",
    "APA",
    "AAPL",
    "AMAT",
    "APTV",
    "ACGL",
    "ADM",
    "ANET",
    "AJG",
    "AIZ",
    "T",
    "ATO",
    "ADSK",
    "ADP",
    "AZO",
    "AVB",
    "AVY",
    "AXON",
    "BKR",
    "BALL",
    "BAC",
    "BAX",
    "BDX",
    "BRK.B",
    "BBY",
    "TECH",
    "BIIB",
    "BLK",
    "BX",
    "BK",
    "BA",
    "BKNG",
    "BWA",
    "BSX",
    "BMY",
    "AVGO",
    "BR",
    "BRO",
    "BF.B",
    "BLDR",
    "BG",
    "BXP",
    "CHRW",
    "CDNS",
    "CZR",
    "CPT",
    "CPB",
    "COF",
    "CAH",
    "KMX",
    "CCL",
    "CARR",
    "CTLT",
    "CAT",
    "CBOE",
    "CBRE",
    "CDW",
    "CE",
    "COR",
    "CNC",
    "CNP",
    "CF",
    "CRL",
    "SCHW",
    "CHTR",
    "CVX",
    "CMG",
    "CB",
    "CHD",
    "CI",
    "CINF",
    "CTAS",
    "CSCO",
    "C",
    "CFG",
    "CLX",
    "CME",
    "CMS",
    "KO",
    "CTSH",
    "CL",
    "CMCSA",
    "CAG",
    "COP",
    "ED",
    "STZ",
    "CEG",
    "COO",
    "CPRT",
    "GLW",
    "CPAY",
    "CTVA",
    "CSGP",
    "COST",
    "CTRA",
    "CRWD",
    "CCI",
    "CSX",
    "CMI",
    "CVS",
    "DHR",
    "DRI",
    "DVA",
    "DAY",
    "DECK",
    "DE",
    "DELL",
    "DAL",
    "DVN",
    "DXCM",
    "FANG",
    "DLR",
    "DFS",
    "DG",
    "DLTR",
    "D",
    "DPZ",
    "DOV",
    "DOW",
    "DHI",
    "DTE",
    "DUK",
    "DD",
    "EMN",
    "ETN",
    "EBAY",
    "ECL",
    "EIX",
    "EW",
    "EA",
    "ELV",
    "EMR",
    "ENPH",
    "ETR",
    "EOG",
    "EPAM",
    "EQT",
    "EFX",
    "EQIX",
    "EQR",
    "ERIE",
    "ESS",
    "EL",
    "EG",
    "EVRG",
    "ES",
    "EXC",
    "EXPE",
    "EXPD",
    "EXR",
    "XOM",
    "FFIV",
    "FDS",
    "FICO",
    "FAST",
    "FRT",
    "FDX",
    "FIS",
    "FITB",
    "FSLR",
    "FE",
    "FI",
    "FMC",
    "F",
    "FTNT",
    "FTV",
    "FOXA",
    "FOX",
    "BEN",
    "FCX",
    "GRMN",
    "IT",
    "GE",
    "GEHC",
    "GEV",
    "GEN",
    "GNRC",
    "GD",
    "GIS",
    "GM",
    "GPC",
    "GILD",
    "GPN",
    "GL",
    "GDDY",
    "GS",
    "HAL",
    "HIG",
    "HAS",
    "HCA",
    "DOC",
    "HSIC",
    "HSY",
    "HES",
    "HPE",
    "HLT",
    "HOLX",
    "HD",
    "HON",
    "HRL",
    "HST",
    "HWM",
    "HPQ",
    "HUBB",
    "HUM",
    "HBAN",
    "HII",
    "IBM",
    "IEX",
    "IDXX",
    "ITW",
    "INCY",
    "IR",
    "PODD",
    "INTC",
    "ICE",
    "IFF",
    "IP",
    "IPG",
    "INTU",
    "ISRG",
    "IVZ",
    "INVH",
    "IQV",
    "IRM",
    "JBHT",
    "JBL",
    "JKHY",
    "J",
    "JNJ",
    "JCI",
    "JPM",
    "JNPR",
    "K",
    "KVUE",
    "KDP",
    "KEY",
    "KEYS",
    "KMB",
    "KIM",
    "KMI",
    "KKR",
    "KLAC",
    "KHC",
    "KR",
    "LHX",
    "LH",
    "LRCX",
    "LW",
    "LVS",
    "LDOS",
    "LEN",
    "LLY",
    "LIN",
    "LYV",
    "LKQ",
    "LMT",
    "L",
    "LOW",
    "LULU",
    "LYB",
    "MTB",
    "MRO",
    "MPC",
    "MKTX",
    "MAR",
    "MMC",
    "MLM",
    "MAS",
    "MA",
    "MTCH",
    "MKC",
    "MCD",
    "MCK",
    "MDT",
    "MRK",
    "META",
    "MET",
    "MTD",
    "MGM",
    "MCHP",
    "MU",
    "MSFT",
    "MAA",
    "MRNA",
    "MHK",
    "MOH",
    "TAP",
    "MDLZ",
    "MPWR",
    "MNST",
    "MCO",
    "MS",
    "MOS",
    "MSI",
    "MSCI",
    "NDAQ",
    "NTAP",
    "NFLX",
    "NEM",
    "NWSA",
    "NWS",
    "NEE",
    "NKE",
    "NI",
    "NDSN",
    "NSC",
    "NTRS",
    "NOC",
    "NCLH",
    "NRG",
    "NUE",
    "NVDA",
    "NVR",
    "NXPI",
    "ORLY",
    "OXY",
    "ODFL",
    "OMC",
    "ON",
    "OKE",
    "ORCL",
    "OTIS",
    "PCAR",
    "PKG",
    "PLTR",
    "PANW",
    "PARA",
    "PH",
    "PAYX",
    "PAYC",
    "PYPL",
    "PNR",
    "PEP",
    "PFE",
    "PCG",
    "PM",
    "PSX",
    "PNW",
    "PNC",
    "POOL",
    "PPG",
    "PPL",
    "PFG",
    "PG",
    "PGR",
    "PLD",
    "PRU",
    "PEG",
    "PTC",
    "PSA",
    "PHM",
    "QRVO",
    "PWR",
    "QCOM",
    "DGX",
    "RL",
    "RJF",
    "RTX",
    "O",
    "REG",
    "REGN",
    "RF",
    "RSG",
    "RMD",
    "RVTY",
    "ROK",
    "ROL",
    "ROP",
    "ROST",
    "RCL",
    "SPGI",
    "CRM",
    "SBAC",
    "SLB",
    "STX",
    "SRE",
    "NOW",
    "SHW",
    "SPG",
    "SWKS",
    "SJM",
    "SW",
    "SNA",
    "SOLV",
    "SO",
    "LUV",
    "SWK",
    "SBUX",
    "STT",
    "STLD",
    "STE",
    "SYK",
    "SMCI",
    "SYF",
    "SNPS",
    "SYY",
    "TMUS",
    "TROW",
    "TTWO",
    "TPR",
    "TRGP",
    "TGT",
    "TEL",
    "TDY",
    "TFX",
    "TER",
    "TSLA",
    "TXN",
    "TXT",
    "TMO",
    "TJX",
    "TSCO",
    "TT",
    "TDG",
    "TRV",
    "TRMB",
    "TFC",
    "TYL",
    "TSN",
    "USB",
    "UBER",
    "UDR",
    "ULTA",
    "UNP",
    "UAL",
    "UPS",
    "URI",
    "UNH",
    "UHS",
    "VLO",
    "VTR",
    "VLTO",
    "VRSN",
    "VRSK",
    "VZ",
    "VRTX",
    "VTRS",
    "VICI",
    "V",
    "VST",
    "VMC",
    "WRB",
    "GWW",
    "WAB",
    "WBA",
    "WMT",
    "DIS",
    "WBD",
    "WM",
    "WAT",
    "WEC",
    "WFC",
    "WELL",
    "WST",
    "WDC",
    "WY",
    "WMB",
    "WTW",
    "WYNN",
    "XEL",
    "XYL",
    "YUM",
    "ZBRA",
    "ZBH",
    "ZTS", 
    "095570",
    "006840",
    "282330",
    "027410",
    "138930",
    "001460",
    "001040",
    "011150",
    "000590",
    "012030",
    "016610",
    "005830",
    "000990",
    "139130",
    "001530",
    "000210",
    "375500",
    "155660",
    "069730",
    "017860",
    "017940",
    "365550",
    "383220",
    "007700",
    "006360",
    "078930",
    "012630",
    "294870",
    "097230",
    "014790",
    "204320",
    "060980",
    "035000",
    "003560",
    "175330",
    "234080",
    "001060",
    "096760",
    "105560",
    "432320",
    "009070",
    "003620",
    "016380",
    "001390",
    "033180",
    "001940",
    "025000",
    "092230",
    "000040",
    "093050",
    "034220",
    "003550",
    "051900",
    "373220",
    "032640",
    "011070",
    "066570",
    "051910",
    "079550",
    "010120",
    "000680",
    "006260",
    "229640",
    "108320",
    "001120",
    "023150",
    "035420",
    "181710",
    "338100",
    "034310",
    "008260",
    "004250",
    "456040",
    "010950",
    "005090",
    "001380",
    "001770",
    "002360",
    "009160",
    "123700",
    "025530",
    "011790",
    "018670",
    "001740",
    "210980",
    "395400",
    "034730",
    "402340",
    "361610",
    "100090",
    "096770",
    "001510",
    "285130",
    "017670",
    "003570",
    "064960",
    "100840",
    "036530",
    "005610",
    "465770",
    "011810",
    "077970",
    "084870",
    "002710",
    "024070",
    "000500",
    "000860",
    "035250",
    "011420",
    "002100",
    "009450",
    "267290",
    "012320",
    "000050",
    "214390",
    "012610",
    "009140",
    "013580",
    "012200",
    "002140",
    "010130",
    "002240",
    "009290",
    "017040",
    "017900",
    "037710",
    "030610",
    "339770",
    "007690",
    "001140",
    "002720",
    "114090",
    "083420",
    "014530",
    "014280",
    "008870",
    "001570",
    "002990",
    "011780",
    "214330",
    "001210",
    "073240",
    "092440",
    "000270",
    "013700",
    "004540",
    "030190",
    "001260",
    "008350",
    "004270",
    "003920",
    "025860",
    "005720",
    "002350",
    "092790",
    "251270",
    "090350",
    "000320",
    "006280",
    "005250",
    "004370",
    "072710",
    "058730",
    "030210",
    "023590",
    "145210",
    "019680",
    "006370",
    "008060",
    "353200",
    "000490",
    "008110",
    "005750",
    "006570",
    "001680",
    "084690",
    "128820",
    "117580",
    "016710",
    "003540",
    "009190",
    "014160",
    "047040",
    "003090",
    "069620",
    "000430",
    "006340",
    "003220",
    "024890",
    "002880",
    "000300",
    "015230",
    "012800",
    "001070",
    "006650",
    "001440",
    "084010",
    "001790",
    "001130",
    "003490",
    "005880",
    "003830",
    "016090",
    "069460",
    "475560",
    "192080",
    "012510",
    "004830",
    "024900",
    "145720",
    "002150",
    "460850",
    "460860",
    "001230",
    "004140",
    "007590",
    "005960",
    "026960",
    "002210",
    "102260",
    "000640",
    "170900",
    "028100",
    "084670",
    "001520",
    "082640",
    "008970",
    "092780",
    "049770",
    "018500",
    "006040",
    "030720",
    "014820",
    "111380",
    "163560",
    "004890",
    "002690",
    "000020",
    "454910",
    "241560",
    "000150",
    "034020",
    "336260",
    "016740",
    "192650",
    "024090",
    "003160",
    "092200",
    "004840",
    "377190",
    "007340",
    "013570",
    "210540",
    "115390",
    "032350",
    "089860",
    "330590",
    "000400",
    "023530",
    "020150",
    "280360",
    "286940",
    "004000",
    "004990",
    "005300",
    "011170",
    "071840",
    "027740",
    "357430",
    "001080",
    "088980",
    "138040",
    "090370",
    "118000",
    "017180",
    "009900",
    "012690",
    "005360",
    "070960",
    "009680",
    "009200",
    "009580",
    "033920",
    "008420",
    "025560",
    "007120",
    "396690",
    "357250",
    "094800",
    "085620",
    "006800",
    "002840",
    "268280",
    "107590",
    "134380",
    "003650",
    "377740",
    "003610",
    "001340",
    "035150",
    "002410",
    "007210",
    "002760",
    "003850",
    "000890",
    "003000",
    "001270",
    "026940",
    "011390",
    "005030",
    "002070",
    "100220",
    "090460",
    "005180",
    "003960",
    "008040",
    "007160",
    "014710",
    "006090",
    "062040",
    "001470",
    "028050",
    "448730",
    "006400",
    "006660",
    "028260",
    "207940",
    "032830",
    "018260",
    "009150",
    "005930",
    "001360",
    "010140",
    "016360",
    "068290",
    "029780",
    "000810",
    "006110",
    "145990",
    "003230",
    "002170",
    "272550",
    "000070",
    "002810",
    "003720",
    "005680",
    "023000",
    "004380",
    "002450",
    "004440",
    "000520",
    "009770",
    "005500",
    "004690",
    "010960",
    "004450",
    "009470",
    "011230",
    "001820",
    "000390",
    "001290",
    "041650",
    "075180",
    "007540",
    "248170",
    "007860",
    "200880",
    "017390",
    "004410",
    "021050",
    "008490",
    "007610",
    "002820",
    "136490",
    "014910",
    "003080",
    "004980",
    "011300",
    "000180",
    "002420",
    "004360",
    "004490",
    "001430",
    "306200",
    "003030",
    "019440",
    "058650",
    "013000",
    "091090",
    "021820",
    "067830",
    "075580",
    "068270",
    "336370",
    "248070",
    "004430",
    "126720",
    "017550",
    "204210",
    "026890",
    "134790",
    "000480",
    "462870",
    "016590",
    "029530",
    "004970",
    "011930",
    "005390",
    "034300",
    "004170",
    "035510",
    "031430",
    "031440",
    "006880",
    "005800",
    "001720",
    "009270",
    "002700",
    "002870",
    "019170",
    "481850",
    "055550",
    "404990",
    "293940",
    "004080",
    "102280",
    "004770",
    "403550",
    "004920",
    "112610",
    "000120",
    "079160",
    "097950",
    "308170",
    "008700",
    "002790",
    "090430",
    "002030",
    "183190",
    "002310",
    "012170",
    "267850",
    "020560",
    "122900",
    "010780",
    "139990",
    "009320",
    "001780",
    "018250",
    "161000",
    "011090",
    "137310",
    "034120",
    "005850",
    "010580",
    "012750",
    "033530",
    "004060",
    "006120",
    "302440",
    "326030",
    "475150",
    "000660",
    "023960",
    "298690",
    "078520",
    "015260",
    "140910",
    "039570",
    "089470",
    "009540",
    "267270",
    "443060",
    "071970",
    "010620",
    "267250",
    "322000",
    "042670",
    "267260",
    "329180",
    "002460",
    "487570",
    "298050",
    "003580",
    "011200",
    "003060",
    "007460",
    "244920",
    "278470",
    "450080",
    "036570",
    "400760",
    "005940",
    "085310",
    "900140",
    "066970",
    "108670",
    "383800",
    "037560",
    "097520",
    "014440",
    "111770",
    "009970",
    "003520",
    "000670",
    "006740",
    "012280",
    "012160",
    "015360",
    "007310",
    "002630",
    "271560",
    "001800",
    "010060",
    "005320",
    "037270",
    "011690",
    "316140",
    "006980",
    "017370",
    "105840",
    "010400",
    "049800",
    "016880",
    "095720",
    "005820",
    "010600",
    "008600",
    "014830",
    "446070",
    "047400",
    "000910",
    "011330",
    "077500",
    "002920",
    "000700",
    "003470",
    "072130",
    "000220",
    "001200",
    "000100",
    "003460",
    "008730",
    "008250",
    "025820",
    "214320",
    "088260",
    "139480",
    "457190",
    "007660",
    "005950",
    "015020",
    "093230",
    "074610",
    "102460",
    "084680",
    "350520",
    "334890",
    "000760",
    "014990",
    "101140",
    "006490",
    "023800",
    "034590",
    "129260",
    "023810",
    "249420",
    "000230",
    "013360",
    "003120",
    "003200",
    "007110",
    "007570",
    "008500",
    "081000",
    "020760",
    "103590",
    "271940",
    "015860",
    "226320",
    "317400",
    "033240",
    "000950",
    "079900",
    "348950",
    "194370",
    "025620",
    "030000",
    "271980",
    "001560",
    "002620",
    "006220",
    "089590",
    "004910",
    "004700",
    "001550",
    "462520",
    "120030",
    "018470",
    "002600",
    "063160",
    "185750",
    "001630",
    "109070",
    "023450",
    "002380",
    "044380",
    "024110",
    "013890",
    "001250",
    "007070",
    "013870",
    "071320",
    "088790",
    "003780",
    "010640",
    "100250",
    "051630",
    "272450",
    "011000",
    "002780",
    "009310",
    "000650",
    "012600",
    "033250",
    "323410",
    "035720",
    "377300",
    "006380",
    "001620",
    "009440",
    "029460",
    "344820",
    "119650",
    "281820",
    "015590",
    "044450",
    "092220",
    "381970",
    "145270",
    "030200",
    "053210",
    "058850",
    "058860",
    "033780",
    "417310",
    "357120",
    "007810",
    "003690",
    "192820",
    "044820",
    "005070",
    "005420",
    "071950",
    "003070",
    "450140",
    "002020",
    "138490",
    "120110",
    "021240",
    "036420",
    "024720",
    "031820",
    "192400",
    "284740",
    "264900",
    "005740",
    "259960",
    "020120",
    "039490",
    "014580",
    "015890",
    "006890",
    "003240",
    "011280",
    "004100",
    "009410",
    "001420",
    "055490",
    "078000",
    "214420",
    "019180",
    "002900",
    "363280",
    "091810",
    "004870",
    "069260",
    "007980",
    "034230",
    "005690",
    "036580",
    "004720",
    "028670",
    "010820",
    "016800",
    "001020",
    "090080",
    "010770",
    "022100",
    "058430",
    "047050",
    "003670",
    "005490",
    "017810",
    "103140",
    "005810",
    "950210",
    "009810",
    "178920",
    "086790",
    "293480",
    "039130",
    "352820",
    "071090",
    "019490",
    "000080",
    "000140",
    "036460",
    "005430",
    "010040",
    "025540",
    "010100",
    "004090",
    "002200",
    "002960",
    "000240",
    "033270",
    "123890",
    "015760",
    "052690",
    "006200",
    "027970",
    "023350",
    "025890",
    "000970",
    "104700",
    "017960",
    "161890",
    "161390",
    "034830",
    "152550",
    "168490",
    "071050",
    "007280",
    "047810",
    "123690",
    "003350",
    "011500",
    "002390",
    "053690",
    "042700",
    "008930",
    "128940",
    "009240",
    "020000",
    "003680",
    "105630",
    "069640",
    "016450",
    "010420",
    "009180",
    "213500",
    "014680",
    "004710",
    "004150",
    "025750",
    "004960",
    "011700",
    "001750",
    "018880",
    "009420",
    "014130",
    "300720",
    "002220",
    "006390",
    "003300",
    "051600",
    "130660",
    "002320",
    "003480",
    "180640",
    "005110",
    "009460",
    "372910",
    "452260",
    "451800",
    "000880",
    "088350",
    "000370",
    "009830",
    "272210",
    "012450",
    "082740",
    "042660",
    "489790",
    "003530",
    "195870",
    "101530",
    "143210",
    "000720",
    "453340",
    "086280",
    "064350",
    "079430",
    "012330",
    "069960",
    "004560",
    "004310",
    "017800",
    "307950",
    "011210",
    "005380",
    "004020",
    "005440",
    "001500",
    "011760",
    "227840",
    "126560",
    "001450",
    "057050",
    "093240",
    "003010",
    "111110",
    "008770",
    "378850",
    "241590",
    "006060",
    "013520",
    "010690",
    "133820",
    "010660",
    "000850",
    "016580",
    "032560",
    "004800",
    "094280",
    "298040",
    "298020",
    "298000",
    "093370",
    "081660",
    "005870",
    "079980",
    "005010",
    "000540",
    "003280"

]

from selenium import webdriver
from selenium.webdriver.chrome.service import Service as ChromeService
from selenium.webdriver.chrome.options import Options

chrome_options = Options()
chrome_options.add_argument("--headless")  # GUI 없이 실행
chrome_options.add_argument("--no-sandbox")  # 샌드박스 비활성화
chrome_options.add_argument("--disable-dev-shm-usage")  # /dev/shm 사용 비활성화

# ChromeDriver 경로 설정
service = ChromeService('/usr/bin/chromedriver')  # ChromeDriver 경로

# ChromeDriver 실행
browser = webdriver.Chrome(service=service, options=chrome_options)


def get_toss_comments(stock_code):
    
    # ChromeDriver 실행
    driver = webdriver.Chrome(service=service, options=chrome_options)
    # driver = webdriver.Chrome()
    comments_by_date = {}  # 날짜별 댓글을 저장할 딕셔너리
    
    try:
        url = f"https://tossinvest.com/stocks/{stock_code}/community"
        driver.get(url)
        
        last_height = driver.execute_script("return document.body.scrollHeight")
        processed_comments = set()  # 이미 처리한 댓글 추적
        
        while True:
            wait = WebDriverWait(driver, 10)
            comments = wait.until(EC.presence_of_all_elements_located(
                (By.CSS_SELECTOR, "#stock-content > div > div > section > section > ul > div > div > article")
            ))
            
            # 새로운 댓글 처리
            new_comments_found = False
            for comment in comments:
                try:
                    # 댓글 내용과 날짜 추출
                    comment_text = comment.find_element(By.CSS_SELECTOR, "#stock-content > div > div > section > section > ul > div > div > article > div > a > span:nth-child(2) > span").text
                    date_element = comment.find_element(By.CSS_SELECTOR, "#stock-content > div > div > section > section > ul > div > div> article > div > header > div > label > time")
                    date_text = date_element.get_attribute("datetime").split('T')[0]  # YYYY-MM-DD 형식
                    
                    # 중복 체크를 위한 고유 식별자 생성
                    comment_id = f"{date_text}_{comment_text}"
                    
                    if comment_id not in processed_comments:
                        processed_comments.add(comment_id)
                        new_comments_found = True
                        
                        # 날짜별로 댓글 저장
                        if date_text not in comments_by_date:
                            comments_by_date[date_text] = []
                        comments_by_date[date_text].append(comment_text)
                        
                        print(f"날짜: {date_text}, 수집된 댓글 수: {len(processed_comments)}")
                
                except Exception as e:
                    print(f"댓글 처리 중 오류 발생: {e}")
                    continue
            
            # 스크롤 다운
            driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
            time.sleep(2)
            
            new_height = driver.execute_script("return document.body.scrollHeight")
            
            # 더 이상 새로운 댓글이 없고 높이가 같으면 종료
            if not new_comments_found and new_height == last_height:
                print("모든 댓글을 수집했습니다.")
                break
                
            last_height = new_height
        
        return comments_by_date
        
    except Exception as e:
        print(f"에러 발생: {e}")
        return {}
        
    finally:
        driver.quit()

def save_comments_to_file(stock_code, comments_by_date):
    # 현재 시간을 파일명에 포함
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    filename = f"comments_{stock_code}_{timestamp}.json"
    
    try:
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump(comments_by_date, f, ensure_ascii=False, indent=4)
        print(f"댓글이 {filename}에 저장되었습니다.")
    except Exception as e:
        print(f"파일 저장 중 오류 발생: {e}")

# 사용 예시
if __name__ == "__main__":
    for code in stock_code:
        print(f"\n{code} 종목의 댓글을 수집합니다...")
        comments_by_date = get_toss_comments(code)
        
        # 수집된 댓글 출력
        for date in sorted(comments_by_date.keys()):
            print(f"\n날짜: {date}")
            print(f"댓글 수: {len(comments_by_date[date])}")
        
        # 파일로 저장
        save_comments_to_file(code, comments_by_date)
        print("-" * 50)